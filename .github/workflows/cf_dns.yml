name: CloudFlare优选IP + 华为云更新DNS

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  update_dns:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      FULL_DOMAIN: ${{ secrets.FULL_DOMAIN }}
      HUAWEI_ACCESS_KEY: ${{ secrets.HUAWEI_ACCESS_KEY }}
      HUAWEI_SECRET_KEY: ${{ secrets.HUAWEI_SECRET_KEY }}
      HUAWEI_REGION: ${{ secrets.HUAWEI_REGION }}
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_USER_ID: ${{ secrets.TG_USER_ID }}
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🔒 隐藏敏感信息
        run: |
          echo "::add-mask::${{ secrets.FULL_DOMAIN }}"
          echo "::add-mask::${{ secrets.HUAWEI_ACCESS_KEY }}"
          echo "::add-mask::${{ secrets.HUAWEI_SECRET_KEY }}"
          echo "::add-mask::${{ secrets.TG_BOT_TOKEN }}"
          echo "::add-mask::${{ secrets.TG_USER_ID }}"

      - name: 🐍 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📚 安装依赖
        run: |
          echo "📦 安装 Python 包..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          echo "📦 安装 Playwright 浏览器..."
          playwright install chromium --with-deps
          
          echo "✅ 安装完成"

      - name: ✅ 检查环境
        run: |
          [ -z "$FULL_DOMAIN" ] && echo "❌ FULL_DOMAIN 未设置" && exit 1
          [ -z "$HUAWEI_ACCESS_KEY" ] && echo "❌ HUAWEI_ACCESS_KEY 未设置" && exit 1
          [ -z "$HUAWEI_SECRET_KEY" ] && echo "❌ HUAWEI_SECRET_KEY 未设置" && exit 1
          echo "✅ 环境检查通过"

      - name: 🚀 运行脚本
        id: update
        env:
          HIDE_DOMAIN: "true"
        run: |
          echo "🚀 开始执行..."
          python cloudflare_dns_updater.py

      - name: 📊 生成报告
        if: always()
        run: |
          echo "# 🎯 DNS 更新报告" >> $GITHUB_STEP_SUMMARY
          echo "- **状态**: ${{ steps.update.outcome == 'success' && '✅ 成功' || '❌ 失败' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **时间**: $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          
          if [ -f cloudflare_bestip.json ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## 📊 统计" >> $GITHUB_STEP_SUMMARY
            for line in 默认 电信 联通 移动 IPv6; do
              count=$(jq -r ".最优IP.${line} // [] | length" cloudflare_bestip.json 2>/dev/null || echo "0")
              echo "- **${line}**: ${count} 个" >> $GITHUB_STEP_SUMMARY
            done
          fi

      - name: 📦 上传结果
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cloudflare-bestip-${{ github.run_number }}
          path: |
            cloudflare_bestip.json
            cloudflare_bestip.txt
          retention-days: 7

      - name: 💾 提交结果
        if: success()
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add cloudflare_bestip.json cloudflare_bestip.txt 2>/dev/null || true
          
          if ! git diff --staged --quiet 2>/dev/null; then
            git commit -m "🤖 Update $(date -u '+%Y-%m-%d %H:%M') [skip ci]"
            git pull --rebase || true
            git push || echo "推送失败"
          fi

      - name: 🧹 清理
        if: always()
        run: rm -rf /tmp/.playwright* ~/.cache/ms-playwright 2>/dev/null || true
