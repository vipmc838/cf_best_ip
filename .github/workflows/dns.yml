name: 🌐 Cloudflare IP 优选 + 华为云 DNS 更新

on:
  schedule:
    - cron: '0 */1 * * *' # ⏰ 每小时自动运行
  workflow_dispatch: # 🖱️ 支持手动触发

permissions:
  contents: write
  actions: read

jobs:
  update_dns:
    name: 🔄 更新 DNS 记录
    runs-on: ubuntu-latest
    
    env:
      FULL_DOMAIN: ${{ secrets.FULL_DOMAIN }}
      HUAWEI_ACCESS_KEY: ${{ secrets.HUAWEI_ACCESS_KEY }}
      HUAWEI_SECRET_KEY: ${{ secrets.HUAWEI_SECRET_KEY }}
      HUAWEI_REGION: ${{ secrets.HUAWEI_REGION }}
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_USER_ID: ${{ secrets.TG_USER_ID }}
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🐍 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: 📦 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 huaweicloudsdkcore huaweicloudsdkdns requests-html lxml[html_clean]

      - name: 🚀 运行脚本
        run: python cloudflare_dns_updater.py

      - name: 💾 保存 JSON & TXT 文件
        uses: actions/upload-artifact@v4
        with:
          name: cloudflare-ip-data
          path: |
            cloudflare_bestip.json
            cloudflare_bestip.txt
          retention-days: 7

      - name: 📝 提交 JSON & TXT 文件到仓库
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cloudflare_bestip.json cloudflare_bestip.txt
          git commit -m "🔄 更新 Cloudflare IP [skip ci]" || echo "No changes to commit"
          git pull --rebase origin HEAD || true
          git push origin HEAD || echo "Push 失败，可能没有变化"

      - name: 📊 生成运行报告
        if: always()
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          # 🌐 Cloudflare IP 优选更新报告
          
          ## 📋 基本信息
          
          | 项目 | 内容 |
          |------|------|
          | 🌍 域名 | `${{ secrets.FULL_DOMAIN }}` |
          | ⏰ 运行时间 | `EOF`
          echo "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')` (北京时间) |" >> $GITHUB_STEP_SUMMARY
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          | 📌 运行状态 | EOF`
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 成功 |" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ 失败 |" >> $GITHUB_STEP_SUMMARY
          fi
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          | 🎯 触发方式 | EOF`
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "⏰ 定时任务 |" >> $GITHUB_STEP_SUMMARY
          else
            echo "🖱️ 手动触发 |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 IP 更新统计" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f cloudflare_bestip.json ]; then
            python3 << 'PYTHON' >> $GITHUB_STEP_SUMMARY
          import json
          try:
              with open('cloudflare_bestip.json', 'r', encoding='utf-8') as f:
                  data = json.load(f)
                  best = data.get('最优IP', {})
                  
                  print('| 线路类型 | IP 数量 | 状态 |')
                  print('|----------|---------|------|')
                  
                  line_emoji = {
                      '默认': '🌐',
                      '电信': '📡',
                      '联通': '📶',
                      '移动': '📱',
                      'IPv6': '🔷'
                  }
                  
                  total_count = 0
                  for line in ['默认', '电信', '联通', '移动', 'IPv6']:
                      ips = best.get(line, [])
                      count = len(ips)
                      total_count += count
                      emoji = line_emoji.get(line, '📍')
                      status = '✅ 已更新' if count > 0 else '⚪ 无数据'
                      print(f'| {emoji} {line} | {count} | {status} |')
                  
                  print(f'| **🎯 总计** | **{total_count}** | - |')
          except Exception as e:
              print(f'❌ 解析失败: {e}')
          PYTHON
          else
            echo "❌ **未生成结果文件**" >> $GITHUB_STEP_SUMMARY
          fi
          
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          
          ## 📦 生成的文件
          
          | 文件名 | 说明 | 用途 |
          |--------|------|------|
          | 📄 `cloudflare_bestip.json` | JSON 格式数据 | 程序调用 |
          | 📄 `cloudflare_bestip.txt` | 纯文本格式 | 客户端导入 |
          
          ## 🔗 快速链接
          
          - 📥 [下载 Artifacts](../../actions/runs/${{ github.run_id }})
          - 📂 [查看仓库文件](../../tree/${{ github.ref_name }})
          - 🔄 [重新运行工作流](../../actions/workflows/${{ github.workflow }})
          
          ---
          
          <div align="center">
          
          **🤖 由 GitHub Actions 自动生成** • [查看日志](../../actions/runs/${{ github.run_id }})
          
          </div>
          EOF
          
          echo "✅ 运行报告已生成"
